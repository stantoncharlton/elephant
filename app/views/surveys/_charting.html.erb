<script type="text/javascript">

    var chart;
    <% combined_tvd_vs = calculated_points.map { |point| {"tvd" => point.true_vertical_depth.round(1), "vs" => point.vertical_section.round(1), "comment" => point.comment || ''} } %>
    <% calculated_points_survey.each do |p| %>
    <% combined_tvd_vs << { "tvd2" => p.true_vertical_depth.round(1), "vs2" => p.vertical_section.round(1)} %>
    <% end %>
    var chartData = <%= raw combined_tvd_vs.to_json.html_safe %>;
    var chartDataAdded = <%= calculated_points_survey.count %>;
    if(chartData[0].comment == '') {
        chartData[0].comment = "Tie In";
    }
    if(chartData[chartData.length - chartDataAdded - 1].comment == '') {
        chartData[chartData.length - chartDataAdded - 1].comment = "TD";
    }

    var chart2;
    <% combined_ns_ew = calculated_points.map { |point| {"ns" => point.north_south.round(1), "ew" => point.east_west.round(1), "comment" => point.comment || ''} } %>
    <% calculated_points_survey.each do |p| %>
    <% combined_ns_ew << { "ns2" => p.north_south.round(1), "ew2" => p.east_west.round(1) } %>
    <% end %>
    var chartData2 = <%= raw combined_ns_ew.to_json.html_safe %>;
    var chartData2Added = <%= calculated_points_survey.count %>;
    if(chartData2[0].comment == '') {
        chartData2[0].comment = "Tie In";
    }
    if(chartData2[chartData2.length - chartData2Added - 1].comment == '') {
        chartData2[chartData2.length - chartData2Added - 1].comment = "TD";
    }

    <% ranges = Survey.get_ranges calculated_points %>

        // SERIAL CHART
        chart = new AmCharts.AmXYChart();
        //chart.pathToImages = "http://www.amcharts.com/lib/3/images/";
        chart.dataProvider = chartData;


        var valueAxis = new AmCharts.ValueAxis();
        valueAxis.title = "Vertical Section";
        valueAxis.position = "bottom";
        valueAxis.dashLength = 5;
        valueAxis.axisAlpha = 0;
        valueAxis.autoGridCount = true;
    valueAxis.minimum = <%= ranges[1][0] - 1 %>;
    valueAxis.maximum = <%= ranges[1][1] + 1 %>;
        chart.addValueAxis(valueAxis);

        var valueAxis = new AmCharts.ValueAxis();
        valueAxis.title = "True Vertical Depth";
        valueAxis.position = "left";
        valueAxis.dashLength = 5;
        valueAxis.axisAlpha = 0;
        valueAxis.autoGridCount = true;
        valueAxis.reversed = true;
    valueAxis.minimum = <%= ranges[0][0] - 1 %>;
    valueAxis.maximum = <%= ranges[0][1] + 1 %>;
        chart.addValueAxis(valueAxis);


        // GRAPH
        var graph = new AmCharts.AmGraph();
        graph.xField = "vs";
        graph.yField = "tvd";
        graph.type = "smoothedLine";
        graph.bullet = "round";
        graph.balloonText = "<b>[[comment]]</b> TVD [[tvd]] ft, VS [[vs]] ft";
        graph.bulletColor = "#FFFFFF";
        graph.bulletBorderColor = "#cc4800";
        graph.bulletBorderAlpha = 1;
        graph.bulletBorderThickness = 2;
        graph.bulletSize = 1.2;
        graph.title = "tvd";
        graph.lineThickness = 0;
        graph.lineApha = 0.3;
        graph.lineColor = "#cc4800";
        graph.clustered = true;
        chart.addGraph(graph);

        // GRAPH
        var graph = new AmCharts.AmGraph();
        graph.xField = "vs2";
        graph.yField = "tvd2";
        graph.type = "smoothedLine";
        graph.bullet = "round";
        graph.balloonText = "<b>Survey</b> TVD [[tvd2]] ft, VS [[vs2]] ft";
        graph.bulletColor = "#FFFFFF";
        graph.bulletBorderColor = "#00BBCC";
        graph.bulletBorderAlpha = 1;
        graph.bulletBorderThickness = 2;
        graph.bulletSize = 0;
        graph.title = "tvd";
        graph.lineThickness = 2;
        graph.lineColor = "#00BBCC";
        graph.clustered = true;
        chart.addGraph(graph);

        // CURSOR
        var chartCursor = new AmCharts.ChartCursor();
        chartCursor.cursorPosition = "mouse";
        chart.addChartCursor(chartCursor);


        // WRITE
        chart.write("chartdiv");

        var label = $("tspan:contains('chart by amcharts.com')");
        if (label.length > 0) {
            label.remove();
        }

        var circles = $('#chartdiv').find('circle[stroke=#cc4800]');
        circles.each(function(index) {
            if(chartData[index].comment != '' || index == chartData.length - chartDataAdded - 1  || index == 0) {
                $(this).attr('r', 4);
            }
        });

        var circle = $('#chartdiv').find('circle[stroke=#00BBCC]:last');
        var increasing = true;
        var pulse = function () {
            var radius = parseFloat(circle.attr('r'));
            if(increasing) {
                radius += 0.5;
            }
            else {
                radius -= 0.5;
            }
            if(radius > 5) {
                increasing = false;
            }
            if(radius < 3.5) {
                increasing = true;
            }
            circle.attr('r', radius);
            setTimeout(pulse, 120);
        };

        setTimeout(pulse, 120);


        // SERIAL CHART
        chart2 = new AmCharts.AmXYChart();
        //chart2.pathToImages = "http://www.amcharts.com/lib/3/images/";
        chart2.dataProvider = chartData2;


        var valueAxis = new AmCharts.ValueAxis();
        valueAxis.title = "East/West";
        valueAxis.position = "bottom";
        valueAxis.dashLength = 5;
        valueAxis.axisAlpha = 0;
        valueAxis.autoGridCount = true;
    valueAxis.minimum = <%= ranges[3][0] - 1 %>;
    valueAxis.maximum = <%= ranges[3][1] + 1 %>;
        chart2.addValueAxis(valueAxis);


        var valueAxis = new AmCharts.ValueAxis();
        valueAxis.title = "North/South";
        valueAxis.position = "left";
        valueAxis.dashLength = 5;
        valueAxis.axisAlpha = 0;
        valueAxis.autoGridCount = true;
        valueAxis.reversed = true;
    valueAxis.minimum = <%= ranges[2][0] - 1 %>;
    valueAxis.maximum = <%= ranges[2][1] + 1 %>;
        chart2.addValueAxis(valueAxis);


        // GRAPH
        var graph = new AmCharts.AmGraph();
        graph.xField = "ew";
        graph.yField = "ns";
        graph.type = "smoothedLine";
        graph.bullet = "round";
        graph.balloonText = "<b>[[comment]]</b> [[ns]], [[ew]]";
        graph.bulletColor = "#FFFFFF";
        graph.bulletBorderColor = "#cc4800";
        graph.bulletBorderAlpha = 1;
        graph.bulletBorderThickness = 2;
        graph.bulletSize = 1.2;
        graph.title = "tvd";
        graph.lineThickness = 0;
        graph.lineApha = 0.3;
        graph.lineColor = "#cc4800";
        graph.clustered = true;
        chart2.addGraph(graph);

        var graph = new AmCharts.AmGraph();
        graph.xField = "ew2";
        graph.yField = "ns2";
        graph.type = "smoothedLine";
        graph.bullet = "round";
        graph.balloonText = "<b>Survey</b> [[ns2]], [[ew2]]";
        graph.bulletColor = "#FFFFFF";
        graph.bulletBorderColor = "#00BBCC";
        graph.bulletBorderAlpha = 1;
        graph.bulletBorderThickness = 2;
        graph.bulletSize = 0;
        graph.title = "ns";
        graph.lineThickness = 2;
        graph.lineColor = "#00BBCC";
        graph.clustered = true;
        chart2.addGraph(graph);

        // CURSOR
        var chartCursor = new AmCharts.ChartCursor();
        chartCursor.cursorPosition = "mouse";
        chart2.addChartCursor(chartCursor);


        // WRITE
        chart2.write("chartdiv2");

    var label = $("tspan:contains('chart by amcharts.com')");
    if (label.length > 0) {
        label.remove();
    }

    var circles = $('#chartdiv2').find('circle[stroke=#cc4800]');
    circles.each(function (index) {
        if (chartData2[index].comment != '' || index == chartData2.length - chartData2Added - 1  || index == 0) {
            $(this).attr('r', 4);
        }
    });


    var circle2 = $('#chartdiv2').find('circle[stroke=#00BBCC]:last');
        var increasing2 = true;
        var pulse2 = function () {
            var radius = parseFloat(circle2.attr('r'));
            if(increasing2) {
                radius += 0.5;
            }
            else {
                radius -= 0.5;
            }
            if(radius > 5) {
                increasing2 = false;
            }
            if(radius < 3.5) {
                increasing2 = true;
            }
            circle2.attr('r', radius);
            setTimeout(pulse2, 120);
        };

        setTimeout(pulse2, 120);


</script>