<div class='job-tray' data-tray="full_history">
  <div class='content'>
    <div class="page_header">
      <h2>Full History</h2>
      <b class='push-right-small'>Run &amp; Maintenance</b>
    </div>

    <% redresses = PartRedress.where(:part_id => part.id).order("created_at DESC") %>
    <% jobs = part.jobs.order("created_at DESC") %>
    <% shipments = Shipment.includes(part_memberships: :part).where("part_memberships.part_id = ?", part.id).order("shipments.created_at DESC") %>

    <div class="map-container">
      <div id='map' class='dark' style='width:100%;height:300px;'></div>
      <div class="corner tlcorner"></div>
      <div class="corner trcorner"></div>
      <div class="corner brcorner"></div>
      <div class="corner blcorner"></div>
    </div>

    <% if jobs.any? || redresses.any? %>
        <br><br>

        <% all_items = jobs.to_a %>
        <% redresses.each do |r| %>
            <% all_items << r %>
        <% end %>
        <% shipments.each do |s| %>
            <% all_items << s %>
        <% end %>
        <% all_items = all_items.sort_by(&:created_at).reverse %>
        <div style="margin-left: -10px; margin-right: -10px;">
          <% job_index = 0 %>
          <% all_items.each_with_index do |item, index| %>
              <% if item.is_a?(Job) %>
                  <%= render 'parts/part_run', job: item, index: job_index %>
                  <% job_index = job_index + 1 %>
              <% elsif item.is_a?(PartRedress) %>
                  <%= render 'parts/maintenance', redress: item, index: index %>
              <% elsif item.is_a?(Shipment) %>
                  <div>
                    <i class="icon-random"></i>       &nbsp;&nbsp;
                    <div class='inline-block align-top'>
                      <%= item.created_at.strftime("%m/%d/%Y") %>
                    </div>
                    <%= render 'shipments/shipment', shipment: item, editable: item.status != Shipment::COMPLETE, show_assets: false, in_job: true %>

                  </div>
              <% end %>
              <br>
          <% end %>
        </div>
    <% else %>
        <p class="center help-text"><br>This asset has not been run on any jobs...</p>
    <% end %>
  </div>
</div>

<script type='text/javascript'>
    var map = L.mapbox.map('map', 'elephant.map-vum3on5g');
    map.attributionControl = false;
    map.scrollWheelZoom.disable();

    var geoJson = [];

    <% coordinates_for_zoom = [] %>
    <% coordinates_for_lines = [] %>

    <% part.jobs.order("created_at DESC").each_with_index do |job, index| %>
    <% if index < 7 && !job.well.location.blank? %>
    <% x = job.well.x_location %>
    <% y = job.well.y_location  %>
    <% coordinates_for_lines << [x, y] %>
    <% coordinates_for_zoom << [y, x] %>
    geoJson.push({
        "type": "Feature",
        "geometry": {
            "type": "Point",
            "coordinates": [<%= x %>, <%= y %>]
        },
        "properties": {
            title: '<%= job.field.name + ' | ' + job.well.name %>',
            'marker-size': 'medium',
            'marker-color': '#0058a8',
            'marker-symbol': '<%= (index + 1).to_s %>',
            url: '/jobs/' + <%= job.id %>
            //'marker-symbol': '1'
        }
    });
    <% end %>
    <% end %>

    map.markerLayer.setGeoJSON(geoJson);

    map.markerLayer.on('click', function (e) {
        map.panTo(e.layer.getLatLng());
    });
    map.markerLayer.on('click', function (e) {
        e.layer.unbindPopup();
        window.location = e.layer.feature.properties.url;
    });

    var bounds = [];
    <% coordinates_for_zoom.each do |c| %>
    bounds.push([<%= c[0] %>, <%= c[1] %>]);
    <% end %>
    map.fitBounds(bounds);
    zoom = Math.round(map.getZoom());
    map.setZoom(zoom - 1);
    <% if coordinates_for_zoom.count == 1 %>
    if (zoom > 8) {
        map.setZoom(8);
    }
    <% end %>

    lines = {
        type: 'Feature',
        geometry: {
            type: 'LineString',
            coordinates: <%= raw coordinates_for_lines.to_json %>
        },
        properties: { }
    };

    L.geoJson(lines, {
        style: {
            "color": "#FFFFFF"
            //"weight": 5,
            //"opacity": 0.65
        }
    }).addTo(map);

    map.markerLayer.on('mouseover', function (e) {
        e.layer.openPopup();
    });
    map.markerLayer.on('mouseout', function (e) {
        e.layer.closePopup();
    });
</script>


