<div class="remote-tray" data-tray="shipping">

  <div class="remote-loading hidden">
    <br><br>
    <%= render 'layouts/inline_loading', title: "Please wait, loading assets in shipping..." %>
  </div>

  <div class="content tray-content content-loaded">

    <% parts = @parts.where(:status => Part::SHIPPING) %>
    <% shipments = Shipment.where(:district_id => @district.id).order("created_at DESC") %>

    <div class='well'>
      <h1 class="donut-text inline"><%= shipments.count %></h1>

      <div class='inline-block push-down push-right-small'>
        <h3 class="inline-block">Shipments</h3>
      </div>

      <div class='pull-right'>
        <%= link_to "New Shipment", shipments_path(district: @district),
                    remote: true, method: :post,
                    class: "bluebtn show-modal-button" %>
      </div>
    </div>

    <div id="shipments_list" class="list">
      <% shipments.each do |shipment| %>
          <%= render 'shipments/shipment', shipment: shipment %>
          <hr>
      <% end %>

      <% parts.where(:status => Part::SHIPPING).each_with_index do |part, index| %>
          <%= render 'parts/sub_part2', part: part, index: index, condensed: true %>
      <% end %>
    </div>

  </div>

</div>

<script type='text/javascript'>

    var oldHide = $.fn.popover.Constructor.prototype.hide;

    $.fn.popover.Constructor.prototype.hide = function () {
        if (this.options.trigger === "hover" && this.tip().is(":hover")) {
            var that = this;
            // try again after what would have been the delay
            setTimeout(function () {
                return that.hide.call(that, arguments);
            }, that.options.delay.hide);
            return;
        }
        oldHide.call(this, arguments);
    };

    $('.popover').popover({  delay: { show: 100, hide: 100 } });
</script>