<div>
  <div>
    <h2 class="job-title inline"><%= job.field.name %></h2>

    <p class="job-well-field-title">Field</p>

    <p class="job-title-divider">|</p>

    <div class="inline-block">
      <h2 class="job-title inline"><%= job.well.name %></h2>

      <p class="job-well-field-title">Well</p>
    </div>


    <div class="map-container push-down-small" style='width:100%;height:80px;'>
      <div id='map' class='dark'></div>
      <div class="corner tlcorner"></div>
      <div class="corner trcorner"></div>
      <div class="corner brcorner"></div>
      <div class="corner blcorner"></div>

      <div class='expand-map-box'>
        <%= link_to "#" do %>
            <span class='expand-text'>expand</span> <i class="icon-resize-vertical icon-white"></i>&nbsp;
        <% end %>
      </div>
    </div>
    <div class='map-views hidden'>
      <%= link_to "#", class: "activity-user-link map-area-view" do %>
          Area View
      <% end %>
      |
      <%= link_to "#", class: "activity-user-link map-site-view" do %>
          Site View
      <% end %>
    </div>
  </div>
</div>

<script type='text/javascript'>
    var map = L.mapbox.map('map', 'elephant.map-vum3on5g');
    map.attributionControl = false;
    map.scrollWheelZoom.disable();

    var geoJson = [];
    geoJson.push({
        "type": "Feature",
        "geometry": {
            "type": "Point",
            "coordinates": [<%= job.well.x_location %>, <%= job.well.y_location %>]
        },
        "properties": {
            title: '<%= job.well.field.name + ' | ' + job.well.name %>',
            'marker-size': 'medium',
            'marker-color': '#0058a8'
            //'marker-symbol': '1'
        }
    });

    map.markerLayer.setGeoJSON(geoJson);

    map.markerLayer.on('click', function (e) {
        ///map.panTo(e.layer.getLatLng());
    });

    var bounds = [];
    bounds.push([<%= job.well.y_location %>, <%= job.well.x_location %>]);
    map.fitBounds(bounds);
    map.setZoom(6);
    //zoom = Math.round(map.getZoom());
    //if (zoom > 8) {
    //    map.setZoom(8);
    //}


    map.markerLayer.on('mouseover', function (e) {
        //e.layer.openPopup();
    });
    map.markerLayer.on('mouseout', function (e) {
        //e.layer.closePopup();
    });

    $('.expand-map-box').live("click", function () {
        if ($('.expand-text').text() == 'expand') {
            $('.expand-text').text('collapse');
            $('.map-container').css('height', '500px');
            $('.map-views').removeClass('hidden');
        }
        else {
            $('.expand-text').text('expand');
            $('.map-container').css('height', '80px');
            $('.map-views').addClass('hidden');
        }
        map._onResize();
        return false;
    });

    $('.map-area-view').live("click", function () {
        layer = L.mapbox.tileLayer('elephant.map-vum3on5g');
        layer.addTo(map);
        map.setZoom(6);
        map._onResize();
        return false;
    });

    $('.map-site-view').live("click", function () {
        layer = L.mapbox.tileLayer('elephant.map-6f5p6pfx');
        layer.addTo(map);
        map.setZoom(13);
        map.fitBounds(bounds);
        map._onResize();
        return false;
    });
</script>
