tray = $(".remote-tray[data-tray='<%= params[:section] %>']");
if(!tray.hasClass('custom-data-closed')) {
function removeOldContent(section) {
    $('.remote-tray').each(function() {
        if($(this).hasClass('custom-data-closed')) {
            generating_report = $(this).find('.generating-report:not(.hidden)');
            download_report = $(this).find('.download-report:not(.hidden)');
            if(generating_report.length > 0 || download_report.length > 0) {

            }
            else {
                $(this).find('.tray-content').remove();
                $(this).find('.tray-content').removeClass('content-loaded');
            }
        }
    });
}

removeOldContent('<%= params[:section] %>');

<% if params[:section] == "drilling-overview" %>
    tray.replaceWith("<%= j render 'drilling_logs/tray_overview', drilling_log: @drilling_log %>");

    <% if @drilling_log.job.status == Job::ON_JOB %>
        setTimeout(function() {
            $.ajax('/drilling_logs/' + <%= @drilling_log.id %> + "?section=drilling-overview", {
                type: 'get',
                dataType: 'script'
            });
        }, 1000 * 60 * 5);
    <% end %>

<% elsif params[:section] == "log" %>
    tray.replaceWith("<%= j render 'drilling_logs/tray_log', drilling_log: @drilling_log %>");
    $('#drilling_log_filter').trigger("change");
    $('.custom-select').customSelect();
    $('.date-picker').datepicker();

    // Load rest of log
    setTimeout(function() {
        $.ajax('/drilling_logs/' + <%= @drilling_log.id %> + "?section=log2", {
            type: 'get',
            dataType: 'script'
        });
    }, 1);

<% elsif params[:section] == "log2" %>
    <% entries = @drilling_log.drilling_log_entries.includes(:bha).to_a %>
    <% dates = entries.group_by { |item| item.entry_at.in_time_zone(Time.zone).to_date } %>
    <% dates.each_with_index do |date, index| %>
        <% if index < dates.length - 1 %>
                group = $(".log-entry-group[data-date='<%= date[0].strftime("%m/%d/%Y") %>']");
                is_visible = group.is(":visible");
                group.replaceWith("<%= j render 'drilling_log_entries/drilling_log_entry_group', date: date[0], entries: date[1], empty: false %>");
                group = $(".log-entry-group[data-date='<%= date[0].strftime("%m/%d/%Y") %>']");
                if(!is_visible) {
                    group.hide();
                }
        <% end %>
    <% end %>
<% elsif params[:section] == "drilling-rop" %>
    tray.replaceWith("<%= j render 'drilling_logs/tray_rop', drilling_log: @drilling_log %>");



    <% drilling_log = @drilling_log %>
    <% if drilling_log.drilling_log_entries.any? %>
    <% rops = [] %>
    <% last_entry = drilling_log.drilling_log_entries.first %>
    <% drilling_log.drilling_log_entries.each do |dl| %>
    <% time = (dl.entry_at - last_entry.entry_at).to_f / 60.0 / 60.0 %>
    <% if dl.activity_code == DrillingLogEntry::DRILLING || dl.activity_code == DrillingLogEntry::SLIDING || time > 0.1 %>
    <% rops <<  { "date" => dl.entry_at.strftime("%m/%d/%Y %k:%M"), "time" => time > 0  ? time.round(2) : 0.0, "activity" => DrillingLogEntry.activity_code_string(dl.activity_code), "rop" => dl == last_entry || dl.activity_code == DrillingLogEntry::TIH || dl.activity_code == DrillingLogEntry::POOH ? 0.0 : ((dl.depth - last_entry.depth).to_f / (dl.entry_at - last_entry.entry_at).to_f * 60.0 * 60.0).round(2), "lineColor" => dl.activity_code == DrillingLogEntry::DRILLING || dl.activity_code == DrillingLogEntry::SLIDING ? (dl.activity_code == DrillingLogEntry::DRILLING ? "#00BBCC" : "#223bf2") : "#f24922", "bulletSize" => (dl.activity_code == DrillingLogEntry::POOH && last_entry.activity_code != DrillingLogEntry::POOH)  ? 11 : 0, "bulletColor" => dl.activity_code == DrillingLogEntry::CHANGE_BHA  ? "#000000" : "#f24922", "wob" => dl.wob, "flow" => dl.flow, "rpm" => dl.rotary_rpm } %>
    <% end %>
    <% last_entry = dl %>
    <% end %>

    var average = <%= drilling_log.nil? || drilling_log.rop.nil? ? 0.0 : drilling_log.rop.round(1) %>;
    var drilling_rop = <%= drilling_log.nil? || drilling_log.drilling_rop.nil? ? 0.0 : drilling_log.drilling_rop.round(1) %>;

    // SERIAL CHART
    var chart = new AmCharts.AmSerialChart();
    chart.pathToImages = "http://www.amcharts.com/lib/3/images/";
    chart.dataProvider = <%= raw rops.to_json.html_safe %>;
    chart.categoryField = "date";
    chart.dataDateFormat = "MM/DD/YYYY H:NN";

    // AXES
    // category

    var categoryAxis = chart.categoryAxis;
    categoryAxis.parseDates = false;
    categoryAxis.minPeriod = "mm"; // our data is daily, so we set minPeriod to DD
    categoryAxis.dashLength = 1;
    categoryAxis.gridAlpha = 0.15;
    categoryAxis.axisColor = "#DADADA";
    categoryAxis.labelFunction = function (value, valueString, axis) {
            return '';
            };


    // value
    var valueAxis = new AmCharts.ValueAxis();
    valueAxis.axisColor = "#DADADA";
    valueAxis.title = "ROP";
    valueAxis.dashLength = 1;
    valueAxis.position = "left";
    //valueAxis.logarithmic = true; // this line makes axis logarithmic
    chart.addValueAxis(valueAxis);

    // GUIDE for average
    var guide = new AmCharts.Guide();
    guide.value = average;
    guide.lineColor = "#CC0000";
    guide.dashLength = 4;
    guide.label = "total";
    guide.inside = true;
    guide.lineAlpha = 1;
    //valueAxis.addGuide(guide);

    // GUIDE for average
    var guide = new AmCharts.Guide();
    guide.value = drilling_rop;
    guide.lineColor = "#CC0000";
    guide.dashLength = 4;
    guide.label = "average";
    guide.inside = true;
    guide.lineAlpha = 1;
    valueAxis.addGuide(guide);

    var trendLine = new AmCharts.TrendLine();
    trendLine.initialDate = "12/04/2013 0:00";
    trendLine.finalDate = "12/05/2013 18:00";
    trendLine.initialValue = 19;
    trendLine.finalValue = 0;
    trendLine.lineColor = "#f33cfa";
    trendLine.lineThickness = 3;
    chart.addTrendLine(trendLine);


    var timeGraph = new AmCharts.AmGraph();
    timeGraph.valueField = "time";
    timeGraph.title = "Time (Hours)";
    timeGraph.type = "column";
    timeGraph.fillAlphas = 1;
    timeGraph.valueAxis = valueAxis;
    timeGraph.balloonText = "Time [[time]] hrs";
    timeGraph.lineColor = "#ccf7ff";
    timeGraph.lineThickness = 0;
    timeGraph.dashLengthField = "dashLength";
    timeGraph.alphaField = "alpha";
    chart.addGraph(timeGraph);

    // GRAPH
    var graph = new AmCharts.AmGraph();
    graph.type = "step";
    graph.bullet = "round";
    graph.bulletColorField = "bulletColor";
    graph.bulletBorderColor = "bulletColor";
    graph.bulletBorderAlpha = 1;
    graph.bulletBorderThickness = 2;
    graph.bulletSizeField = "bulletSize";
    graph.balloonText = "<b>[[activity]]</b><br>ROP [[rop]] ft/hr";
    graph.title = "Rop";
    graph.valueField = "rop";
    graph.lineThickness = 2;
    graph.lineColor = "#00BBCC";
    graph.lineColorField = "lineColor";
    chart.addGraph(graph);


    // CURSOR
    var chartCursor = new AmCharts.ChartCursor();
    chartCursor.cursorPosition = "mouse";
    chart.addChartCursor(chartCursor);

    // SCROLLBAR
    var chartScrollbar = new AmCharts.ChartScrollbar();
    chartScrollbar.graphType = "smoothedLine";
    chartScrollbar.hideResizeGrips = true;
    chartScrollbar.graph = timeGraph;
    chartScrollbar.scrollbarHeight = 40;
    chartScrollbar.color = "transparent";
    chartScrollbar.autoGridCount = true;
    chart.addChartScrollbar(chartScrollbar);

    // WRITE
    chart.write("ropchart");


    // WOB
    chart = new AmCharts.AmSerialChart();
    //chart.pathToImages = "http://www.amcharts.com/lib/3/images/";
    chart.dataProvider = <%= raw rops.to_json.html_safe %>;
    chart.categoryField = "date";
    chart.dataDateFormat = "MM/DD/YYYY H:NN";

    var categoryAxis = chart.categoryAxis;
    categoryAxis.parseDates = false;
    categoryAxis.minPeriod = "mm";
    categoryAxis.dashLength = 1;
    categoryAxis.gridAlpha = 0.15;
    categoryAxis.axisColor = "#DADADA";
    categoryAxis.labelFunction = function (value, valueString, axis) {
            return '';
            };

    var wobAxis = new AmCharts.ValueAxis();
    wobAxis.title = "WOB";
    wobAxis.gridAlpha = 0;
    wobAxis.axisAlpha = 0;
    chart.addValueAxis(wobAxis);

    var graph = new AmCharts.AmGraph();
    graph.type = "smoothedLine";
    graph.bullet = "round";
    graph.fillAlphas = 0.3;
    graph.bulletBorderAlpha = 1;
    graph.bulletBorderThickness = 2;
    graph.bulletSize = "0";
    graph.balloonText = "<b>[[activity]]</b><br>ROP [[rop]]<br>WOB [[wob]]";
        graph.title = "WOB";
        graph.valueField = "wob";
        graph.lineThickness = 2;
        graph.lineColor = "#8fc0e9";
        chart.addGraph(graph);

        var chartCursor = new AmCharts.ChartCursor();
        chartCursor.cursorPosition = "mouse";
        chart.addChartCursor(chartCursor);

        chart.write("wobchart");


        // Flow
        chart = new AmCharts.AmSerialChart();
        //chart.pathToImages = "http://www.amcharts.com/lib/3/images/";
        chart.dataProvider = <%= raw rops.to_json.html_safe %>;
        chart.categoryField = "date";
        chart.dataDateFormat = "MM/DD/YYYY H:NN";

        var categoryAxis = chart.categoryAxis;
        categoryAxis.parseDates = false;
        categoryAxis.minPeriod = "mm";
        categoryAxis.dashLength = 1;
        categoryAxis.gridAlpha = 0.15;
        categoryAxis.axisColor = "#DADADA";
        categoryAxis.labelFunction = function (value, valueString, axis) {
                return '';
                };

        var wobAxis = new AmCharts.ValueAxis();
        wobAxis.title = "Flow";
        wobAxis.gridAlpha = 0;
        wobAxis.axisAlpha = 0;
        chart.addValueAxis(wobAxis);

        var graph = new AmCharts.AmGraph();
        graph.type = "smoothedLine";
        graph.bullet = "round";
        graph.fillAlphas = 0.3;
        graph.bulletBorderAlpha = 1;
        graph.bulletBorderThickness = 2;
        graph.bulletSize = "0";
        graph.balloonText = "<b>[[activity]]</b><br>ROP [[rop]]<br>Flow [[flow]]";
            graph.title = "Flow";
            graph.valueField = "flow";
            graph.lineThickness = 2;
            graph.lineColor = "#8fc0e9";
            chart.addGraph(graph);

            var chartCursor = new AmCharts.ChartCursor();
            chartCursor.cursorPosition = "mouse";
            chart.addChartCursor(chartCursor);

            chart.write("flowchart");


            // RPM
            chart = new AmCharts.AmSerialChart();
            //chart.pathToImages = "http://www.amcharts.com/lib/3/images/";
            chart.dataProvider = <%= raw rops.to_json.html_safe %>;
            chart.categoryField = "date";
            chart.dataDateFormat = "MM/DD/YYYY H:NN";

            var categoryAxis = chart.categoryAxis;
            categoryAxis.parseDates = false;
            categoryAxis.minPeriod = "mm";
            categoryAxis.dashLength = 1;
            categoryAxis.gridAlpha = 0.15;
            categoryAxis.axisColor = "#DADADA";
            categoryAxis.labelFunction = function (value, valueString, axis) {
                    return '';
                    };

            var wobAxis = new AmCharts.ValueAxis();
            wobAxis.title = "RPM";
            wobAxis.gridAlpha = 0;
            wobAxis.axisAlpha = 0;
            chart.addValueAxis(wobAxis);

            var graph = new AmCharts.AmGraph();
            graph.type = "smoothedLine";
            graph.bullet = "round";
            graph.fillAlphas = 0.3;
            graph.bulletBorderAlpha = 1;
            graph.bulletBorderThickness = 2;
            graph.bulletSize = "0";
            graph.balloonText = "<b>[[activity]]</b><br>ROP [[rop]]<br>RPM [[rpm]]";
                graph.title = "RPM";
                graph.valueField = "rpm";
                graph.lineThickness = 2;
                graph.lineColor = "#8fc0e9";
                chart.addGraph(graph);

                var chartCursor = new AmCharts.ChartCursor();
                chartCursor.cursorPosition = "mouse";
                chart.addChartCursor(chartCursor);

                chart.write("rpmchart");

                var label = $("tspan:contains('chart by amcharts.com')");
                if (label.length > 0) {
                        label.remove();
                        }

                <% end %>


                <% elsif params[:section] == "drilling-runs" %>
    tray.replaceWith("<%= j render 'drilling_logs/tray_runs', drilling_log: @drilling_log %>");
<% elsif params[:section] == "drilling-daily" %>
    tray.replaceWith("<%= j render 'drilling_logs/tray_daily', drilling_log: @drilling_log %>");
<% elsif params[:section] == "drilling-bha" %>
    tray.replaceWith("<%= j render 'drilling_logs/tray_bha', drilling_log: @drilling_log %>");
    $('.popover').popover({  delay: { show: 100, hide: 100 } });
<% elsif params[:section] == "drilling-npt" %>
    tray.replaceWith("<%= j render 'drilling_logs/tray_npt', drilling_log: @drilling_log %>");
<% elsif params[:section] == "drilling-reports" %>
    tray.replaceWith("<%= j render 'drilling_logs/tray_reports', drilling_log: @drilling_log %>");

    $('.generate-report').each(function() {
        $(this).click(function() {
            report = $(this).closest('.report');
            report.find('.generating-report').removeClass('hidden');
            $(this).addClass('hidden');
            $(this).closest('.generate-report-div').addClass('hidden');
        });
    });


    $('.report-type').change(function() {
        report = $(this).closest('.report');
        report.find('.generate-report').removeClass('hidden');
        report.find('.download-report').addClass('hidden');
    });
<% elsif params[:section] == "survey" %>
    tray.replaceWith("<%= j render 'drilling_logs/tray_survey', drilling_log: @drilling_log %>");
<% else %>
    report = $(".report[data-report='<%= @report_name %>']");
    if(report.length > 0) {
        report.find('.generating-report').addClass('hidden');
        report.find('.generate-report-div').removeClass('hidden');
        download_link = report.find('.download-report');
        download_link.attr('href', "<%= sanitize(@full_url) %>");
        download_link.removeClass('hidden');
    }
<% end %>

if (!window.matchMedia || !window.matchMedia("(max-device-width: 1024px)").matches) {
    $('.tooltip-info').tooltip();
}

$('.custom-select-ajax').each(function() {
    span_tag = $(this).next('span');
    if($(this).prop("tagName").toLowerCase() == 'select' && span_tag.length <= 0 && !span_tag.hasClass('customSelect')) {
       $(this).customSelect();
    }
});
}